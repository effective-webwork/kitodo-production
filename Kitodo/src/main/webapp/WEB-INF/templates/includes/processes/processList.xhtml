<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:fn="http://xmlns.jcp.org/jsp/jstl/functions"
        xmlns:p="http://primefaces.org/ui">
    <h:form id="processesForm">
        <!--@elvariable id="process" type="org.kitodo.production.dto.ProcessDTO-->
        <p:dataTable id="processesTable"
                     styleClass="default-layout"
                     var="process"
                     value="#{ProcessForm.lazyDTOModel}"
                     selection="#{ProcessForm.selectedProcesses}"
                     lazy="true"
                     paginator="true"
                     resizableColumns="true"
                     liveResize="true"
                     sortBy="#{process.properties.id}"
                     sortOrder="descending"
                     rows="#{LoginForm.loggedUser.tableSize}"
                     paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {NextPageLink} {LastPageLink}"
                     currentPageReportTemplate="#{msgs.currentPageReportTemplate}"
                     paginatorPosition="bottom">

            <p:ajax event="rowToggle" oncomplete="registerRowToggleEvents();" />

            <p:column styleClass="checkboxListColumn" selectionMode="multiple" resizable="false"/>
            <p:column styleClass="hierarchy-info">
                <p:rowToggler rendered="#{process.getParentID() ne 0 or process.hasChildren()}"/>
                <h:outputText rendered="#{process.getParentID() ne 0 and not process.hasChildren()}"><i class="fa fa-long-arrow-left" title="#{msgs.hierarchicalParents}"/></h:outputText>
                <h:outputText rendered="#{process.getParentID() eq 0 and process.hasChildren()}"><i class="fa fa-long-arrow-right" title="#{msgs.hierarchicalChildren}"/></h:outputText>
                <h:outputText rendered="#{process.getParentID() ne 0 and process.hasChildren()}"><i class="fa fa-exchange fa-rotate-90" title="#{msgs.hierarchicalBoth}"/></h:outputText>
            </p:column>
            <p:column id="idColumn"
                      width="50"
                      styleClass="numeric"
                      resizable="false"
                      headerText="#{msgs.id}"
                      sortBy="#{process.properties.id}"
                      filterBy="#{process.properties.id}">
                <h:outputText value="#{process.id}"
                              title="#{process.id}"/>
            </p:column>
            <p:column id="titleColumn"
                      headerText="#{msgs.processTitle}"
                      sortBy="#{process.title.keyword}"
                      filterBy="#{process.title}"
                      rendered="#{ProcessForm.showColumn('process.title')}">
                <h:outputText value="#{process.title}"
                              title="#{process.title}"/>
            </p:column>
            <p:column id="progressColumn"
                      styleClass="progressColumn"
                      headerText="#{msgs.status}"
                      rendered="#{ProcessForm.showColumn('process.state')}">
                <ui:include src="/WEB-INF/templates/includes/processes/progressColumn.xhtml"/>
            </p:column>
            <p:column headerText="#{msgs.project}"
                      rendered="#{ProcessForm.showColumn('process.project')}">
                <h:outputText value="#{process.project.title}"
                              title="#{process.project.title}"/>
            </p:column>
            <p:column headerText="#{msgs.duration}"
                      rendered="#{ProcessForm.showColumn('process.duration')}">
                <h:outputText value="#{ProcessForm.getProcessDuration(process)}"
                              title="#{ProcessForm.getProcessDuration(process)}"/>
            </p:column>
            <!-- columns for process properties that have been configured in kitodo config file! -->
            <p:columns value="#{ProcessForm.getProcessPropertyNames()}"
                       var="propertyName"
                       headerText="#{fn:replace(propertyName, 'process.', '')}"
                       rendered="#{ProcessForm.showColumn(propertyName)}">
                <h:outputText value="#{ProcessForm.getPropertyValue(process, fn:replace(propertyName, 'process.', ''))}"
                              title="#{ProcessForm.getPropertyValue(process, fn:replace(propertyName, 'process.', ''))}"/>
            </p:columns>
            <p:column styleClass="actionsColumn"
                      resizable="false"
                      width="310"
                      headerText="#{msgs.actions}">
                <h:panelGroup layout="block"
                              styleClass="actionsBlock">

                    <h:panelGroup styleClass="action"
                                  title="#{ProcessForm.createProcessesWithCalendar(process)? msgs.createProcessesWithCalendar : msgs.calendarNotConfigured}">
                        <h:link id="calendarEdit"
                                outcome="calendarEdit"
                                styleClass="#{ProcessForm.createProcessesWithCalendar(process) ? '' : 'ui-state-disabled'}"
                                disabled="#{not ProcessForm.createProcessesWithCalendar(process)}">
                            <h:outputText><i class="fa fa-calendar fa-lg"/></h:outputText>
                            <f:param name="id" value="#{process.id}"/>
                        </h:link>
                    </h:panelGroup>

                    <h:link id="viewProcess"
                            outcome="processEdit"
                            styleClass="action"
                            title="#{msgs.view}"
                            rendered="#{SecurityAccessController.hasAuthorityToViewProcess() and not SecurityAccessController.hasAuthorityToEditProcess()}">
                        <h:outputText><i class="fa fa-eye fa-lg"/></h:outputText>
                        <f:param name="referer" value="processes"/>
                        <f:param name="id" value="#{process.id}"/>
                    </h:link>

                    <h:link id="editProcess"
                            outcome="processEdit"
                            styleClass="action"
                            title="#{msgs.edit}"
                            rendered="#{SecurityAccessController.hasAuthorityToEditProcess()}">
                        <h:outputText><i class="fa fa-pencil-square-o fa-lg"/></h:outputText>
                        <f:param name="referer" value="processes"/>
                        <f:param name="id" value="#{process.id}"/>
                    </h:link>

                    <!--@elvariable id="taskOptions" type="java.util.List"-->
                    <ui:param name="taskOptions" value="#{DataEditorForm.getCurrentTaskOptions(process.id)}"/>
                    <!-- if the user has more than one metadata editor task "INWORK", display "select current task" dialog -->
                    <p:commandLink id="openTaskSelectionDialogLink"
                                   styleClass="action"
                                   title="#{msgs['dataEditor.selectMetadataTask']} (#{process.title})"
                                   oncomplete="$('#loadingScreen').hide(); PF('selectCurrentTaskDialog').show();"
                                   rendered="#{SecurityAccessController.hasAuthorityToOpenMetadataEditor() and taskOptions.size() gt 1}">
                        <f:actionListener binding="#{DataEditorForm.setProcessByID(process.id)}"/>
                        <h:outputText><i class="fa fa-list-alt fa-lg"/></h:outputText>
                    </p:commandLink>
                    <!-- else, open metadata editor directly -->
                    <!--@elvariable id="currentTaskId" type="int"-->
                    <ui:param name="currentTaskId" value="#{taskOptions.size() eq 1 ? taskOptions.get(0).getId() : DataEditorForm.getFallbackTaskID(process.id)}" />
                    <h:commandLink id="readXML"
                                   action="#{DataEditorForm.open(currentTaskId, 'processes')}"
                                   styleClass="action"
                                   title="#{msgs.metadataEdit}"
                                   rendered="#{SecurityAccessController.hasAuthorityToOpenMetadataEditor() and taskOptions.size() le 1}">
                        <f:actionListener binding="#{CommentForm.setCurrentTaskById(currentTaskId)}"/>
                        <h:outputText><i class="fa fa-list-alt fa-lg"/></h:outputText>
                    </h:commandLink>

                    <p:commandLink id="download"
                                   action="#{ProcessForm.downloadToHome}"
                                   styleClass="action"
                                   title="#{msgs.linkHomeDirectory}"
                                   rendered="#{SecurityAccessController.hasAuthorityToEditProcessImages()}">
                        <h:outputText><i class="fa fa-download fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                        <!-- TODO: add separate message in case it already exists and alert -->
                    </p:commandLink>

                    <p:commandLink id="upload"
                                   action="#{ProcessForm.uploadFromHome}"
                                   styleClass="action"
                                   title="#{msgs.deleteLinkHomeDirectory}"
                                   rendered="#{SecurityAccessController.hasAuthorityToEditProcessImages()}">
                        <h:outputText><i class="fa fa-upload fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                        <p:confirm header="#{msgs.confirmDelete}" message="#{msgs.deleteLinkHomeDirectory}?"
                                   icon="ui-icon-alert"/>
                    </p:commandLink>

                    <!-- TODO: could be used for adding text: http://blog.fontawesome.io/2014/05/19/stacking-text-and-icons/ -->
                    <p:commandLink id="exportLogXml"
                                   action="#{ProcessForm.createXML}"
                                   styleClass="action"
                                   title="#{msgs.createXML}">
                        <h:outputText><i class="fa fa-file-code-o fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                    </p:commandLink>

                    <p:commandLink id="downloadDocket"
                                   action="#{ProcessForm.downloadDocket}"
                                   styleClass="action"
                                   title="#{msgs.docketPrint}"
                                   ajax="false" rendered="#{SecurityAccessController.hasAuthorityToViewDocket()}">
                        <h:outputText><i class="fa fa-print fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                    </p:commandLink>

                    <h:commandLink id="exportMets"
                                   action="#{ProcessForm.exportMets(process.id)}"
                                   styleClass="action"
                                   title="#{msgs.exportMets}"
                                   rendered="#{SecurityAccessController.hasAuthorityToExportProcess()}">
                        <h:outputText><i class="fa fa-file-code-o fa-lg"/></h:outputText>
                    </h:commandLink>

                    <h:commandLink id="exportPdf"
                                   action="#{ProcessForm.exportPdf}"
                                   styleClass="action"
                                   title="#{msgs.exportPdf}"
                                   rendered="#{SecurityAccessController.hasAuthorityToExportProcess()}">
                        <h:outputText><i class="fa fa-file-pdf-o fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                    </h:commandLink>

                    <h:commandLink id="exportDms"
                                   action="#{ProcessForm.exportDMS}"
                                   styleClass="action"
                                   title="#{msgs.exportDMS}"
                                   rendered="#{SecurityAccessController.hasAuthorityToExportProcess()}">
                        <h:outputText><i class="fa fa-file-archive-o fa-lg"/></h:outputText>
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                    </h:commandLink>

                    <h:panelGroup styleClass="action"
                                  title="#{process.hasChildren() ? msgs.processNotDeletableWithChildren : msgs.delete}">
                        <p:commandLink id="deleteProcess"
                                       process="@this"
                                       action="#{ProcessForm.delete(process)}"
                                       title="#{ process.hasChildren() ? msgs.processNotDeletableWithChildren : msgs.delete}"
                                       rendered="#{SecurityAccessController.hasAuthorityToDeleteProcess()}"
                                       disabled="#{process.hasChildren()}"
                                       update="processesTabView:processesForm:processesTable">
                                <h:outputText><i class="fa fa-trash-o fa-lg"/></h:outputText>
                                <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                                <p:confirm header="#{msgs.confirmDelete}"
                                           message="#{msgs.confirmDeleteProcess}"
                                           icon="ui-icon-alert"/>
                            </p:commandLink>
                    </h:panelGroup>
                </h:panelGroup>
            </p:column>

            <p:rowExpansion styleClass="expansion-class">
                <div class="row-expansion-wrapper">
                    <p:panelGrid id="processRowExpansionTable"
                                 columns="2">
                        <p:panelGrid id="processParentTable"
                                     styleClass="expansion-column"
                                     columns="2"
                                     columnClasses="label, value">
                            <h:outputText value="#{msgs.hierarchicalParents}:"/>
                            <p:dataTable var="parent"
                                         value="#{ProcessForm.getAllParentProcesses(process.id)}"
                                         rendered="#{process.getParentID() ne 0}">
                                <p:column>
                                    <h:outputText value="#{parent.getTitle()}"
                                                  title="#{parent.getTitle()}"/>
                                </p:column>
                                <p:column styleClass="actionsColumn">
                                    <h:link outcome="processEdit"
                                            styleClass="action"
                                            title="#{msgs.view}"
                                            rendered="#{SecurityAccessController.hasAuthorityToViewProcess() and not SecurityAccessController.hasAuthorityToEditProcess()}">
                                        <i class="fa fa-eye fa-lg"/>
                                        <f:param name="referer" value="processes"/>
                                        <f:param name="id" value="#{parent.id}"/>
                                    </h:link>
                                    <!--@elvariable id="taskOptions" type="java.util.List"-->
                                    <ui:param name="taskOptions" value="#{DataEditorForm.getCurrentTaskOptions(parent.id)}"/>
                                    <!-- if the user has more than one metadata editor task "INWORK", display "select current task" dialog -->
                                    <h:link outcome="processEdit"
                                            styleClass="action"
                                            title="#{msgs.edit}"
                                            rendered="#{SecurityAccessController.hasAuthorityToEditProcess()}">
                                        <i class="fa fa-pencil-square-o fa-lg"/>
                                        <f:param name="referer" value="processes"/>
                                        <f:param name="id" value="#{parent.id}"/>
                                    </h:link>
                                    <ui:param name="currentTaskId" value="#{taskOptions.size() eq 1 ? taskOptions.get(0).getId() : DataEditorForm.getFallbackTaskID(parent.id)}" />
                                    <h:commandLink action="#{DataEditorForm.open(currentTaskId, 'processes')}"
                                                   styleClass="action"
                                                   title="#{msgs.metadataEdit}"
                                                   rendered="#{SecurityAccessController.hasAuthorityToOpenMetadataEditor() and taskOptions.size() le 1}">
                                        <f:actionListener binding="#{CommentForm.setCurrentTaskById(currentTaskId)}"/>
                                        <h:outputText><i class="fa fa-list-alt fa-lg"/></h:outputText>
                                    </h:commandLink>
                                </p:column>
                            </p:dataTable>
                            <h:outputText value="#{msgs.none}" rendered="#{process.getParentID() eq 0}"/>
                        </p:panelGrid>
                        <p:panelGrid id="processChildrenTable"
                                     styleClass="expansion-column"
                                     columns="2"
                                     columnClasses="label, value">
                            <h:outputText value="#{msgs.hierarchicalChildren}:"/>
                            <h:panelGroup>
                                <h:outputText value="#{ProcessForm.getNumberOfChildProcesses(process.getId())} " rendered="#{process.hasChildren()}"/>
                                <p:commandLink value="#{msgs.show}"
                                               action="#{ProcessForm.changeFilter('parentprocessid:'.concat(process.getId()))}"
                                               rendered="#{process.hasChildren()}"/>
                                <h:outputText value=" #{msgs.none}" rendered="#{not process.hasChildren()}"/>
                            </h:panelGroup>
                        </p:panelGrid>
                    </p:panelGrid>
                </div>
            </p:rowExpansion>

        </p:dataTable>
        <div id="dropDownMenus">
            <p:commandButton id="actionsButton" value="#{msgs.availableActions}" styleClass="secondary" icon="fa fa-sort" iconPos="right"/>
            <p:menu overlay="true" trigger="processesTabView:processesForm:actionsButton" my="left bottom" at="left top">
                    <p:menuitem id="processingStatusUpSelection"
                                value="#{msgs.processingStatusUp}"
                                action="#{ProcessForm.setTaskStatusUpForSelection}"
                                update="processesTabView:processesForm:processesTable"
                                icon="fa fa-arrow-circle-o-up"/>
                    <p:menuitem id="processingStatusDownSelection"
                                value="#{msgs.processingStatusDown}"
                                action="#{ProcessForm.setTaskStatusDownForSelection}"
                                update="processesTabView:processesForm:processesTable"
                                icon="fa fa-arrow-circle-o-down"/>
                    <p:menuitem id="executeScriptSelection"
                                value="#{msgs.executeKitodoScript}"
                                onclick="PF('executeScriptSelectedDialog').show();"
                                icon="fa fa-cogs"/>
                    <p:menuitem id="downloadSelection"
                                value="#{msgs.linkHomeDirectory}"
                                action="#{ProcessForm.downloadToHomeForSelection}"
                                update="processesTabView:processesForm:processesTable"
                                icon="fa fa-download"/>
                    <p:menuitem id="uploadAll"
                                value="#{msgs.deleteLinkHomeDirectory}"
                                action="#{ProcessForm.uploadFromHomeForAll}"
                                update="processesTabView:processesForm:processesTable"
                                icon="fa fa-upload">
                        <f:setPropertyActionListener value="#{process.id}" target="#{ProcessForm.processByID}"/>
                        <p:confirm header="#{msgs.confirmDelete}" message="#{msgs.deleteLinkHomeDirectory}?"
                                   icon="ui-icon-alert"/>
                    </p:menuitem>
                    <p:menuitem id="exportDmsSelection"
                                value="#{msgs.exportDMS}"
                                action="#{ProcessForm.exportDMSForSelection}"
                                update="processesTabView:processesForm:processesTable"
                                icon="fa fa-file-archive-o"/>
                    <p:menuitem id="createExcel"
                                value="#{msgs.createExcel}"
                                action="#{ProcessForm.generateResult}"
                                ajax="false"
                                icon="fa fa-file-excel-o"/>
                    <p:menuitem id="createPdf"
                                value="#{msgs.createPdf}"
                                action="#{ProcessForm.generateResultAsPdf}"
                                ajax="false"
                                icon="fa fa-file-pdf-o"/>
                </p:menu>
            <p:commandButton id="statisticButton" value="#{msgs.statisticalEvaluation}" styleClass="secondary" icon="fa fa-sort" iconPos="right"/>
            <p:menu overlay="true" trigger="processesTabView:processesForm:statisticButton" my="left bottom" at="left top">
                <p:menuitem id="stateOfVolume"
                            value="#{msgs.stateOfVolume}"
                            action="#{ProcessForm.showStateOfVolume}"
                            update="processesTabView:processesForm"
                            icon="fa fa-arrow-circle-o-up"/>
                <p:menuitem id="durationOfTasks"
                            value="#{msgs.durationOfTasks}"
                            action="#{ProcessForm.showDurationOfTasks}"
                            update="processesTabView:processesForm"
                            icon="fa fa-arrow-circle-o-up"/>
            </p:menu>
        </div>

        <p:pieChart rendered="#{ProcessForm.showPieModel()}" model="#{ProcessForm.pieModel}"/>
        <p:dataTable  id="statisticResult"
                      style="width: 50%"
                      rendered="#{ProcessForm.showPieModel()}"
                      value="#{ProcessForm.statisticResult}"
                      var="result">
            <p:column headerText="#{msgs.task}"
                      width="50">
                <h:outputText title="#{result.key}"
                              value="#{result.key}"/>
            </p:column>
            <p:column headerText="#{msgs.amount}"
                      width="50">
                <h:outputText title="#{result.value}"
                              value="#{result.value}"/>
            </p:column>
        </p:dataTable>

        <p:barChart rendered="#{ProcessForm.showBarModel()}" model="#{ProcessForm.stackedBarModel}" style="width: 100%"/>

    </h:form>
</ui:composition>
